baseURL = '/'
title = 'Dynastische Eheverträge'
theme = 'book'
relativeURLs = true
# Book configuration
#disablePathToLower = true
#enableGitInfo = true

# Needed for mermaid/katex shortcodes
paginate = 15
paginatePath  ="page"


[markup]
  [markup.goldmark]
    [markup.goldmark.parser]
      [markup.goldmark.parser.attribute]
        block = true
   [markup.goldmark.renderer]
  unsafe = true     
[markup.tableOfContents]
  startLevel = 1

[outputFormats]
  [outputFormats.SearchIndex]
    baseName = "search"
    mediaType = "application/json"
[outputs]
    home = [ "HTML", "JSON", "RSS", "SearchIndex"]
    
# Multi-lingual mode config
# There are different options to translate files
# See https://gohugo.io/content-management/multilingual/#translation-by-filename
# And https://gohugo.io/content-management/multilingual/#translation-by-content-directory
#[languages]
#[languages.en]
 # languageName = 'English'
 # contentDir = 'content.en'
 # weight = 1


#disableKinds = ['taxonomy', 'taxonomyTerm']

[menu]
[[menu.before]]
name = "Startseite"
url = "/"
weight = 1
[[menu.before]]
name = "Projekt"
url = "/about"
weight = 2
[[menu.before]]
name = "Verträge"
url = "/post"
weight = 3
[[menu.before]]
name = "Glossar"
url = "/glossar"
weight = 4
[[menu.before]]
name = "Feedback"
url = "/feedback"
weight = 5
[[menu.before]]
name = "Literatur und Quellen"
url = "/literatur"
weight = 5
[[menu.before]]
name = "Tipps zur Suche"
url = "/suche"
weight = 6


#[[menu.after]]
#  name = "Hugo Themes"
##  url = "https://themes.gohugo.io/hugo-book/"
 # weight = 20

[params]
  # (Optional, default light) Sets color theme: light, dark or auto.
  # Theme 'auto' switches between dark and light modes based on browser/os preferences
  BookTheme = 'light'

  # (Optional, default true) Controls table of contents visibility on right side of pages.
  # Start and end levels can be controlled with markup.tableOfContents setting.
  # You can also specify this parameter per page in front matter.
  BookToC = false

  # (Optional, default none) Set the path to a logo for the book. If the logo is
  # /static/logo.png then the path would be logo.png
  #BookLogo = 'bild1.jpg'

  # (Optional, default none) Set leaf bundle to render as side menu
  # When not specified file structure and weights will be used
  BookMenuBundle = '/menu'

  # (Optional, default docs) Specify root page to render child pages as menu.
  # Page is resoled by .GetPage function: https://gohugo.io/functions/getpage/
  # For backward compatibility you can set '*' to render all sections to menu. Acts same as '/'
  BookSection = 'docs'

  # Set source repository location.
  # Used for 'Last Modified' and 'Edit this page' links.
  #BookRepo = 'https://github.com/alex-shpak/hugo-book'

  # (Optional, default 'commit') Specifies commit portion of the link to the page's last modified
  # commit hash for 'doc' page type.
  # Requires 'BookRepo' param.
  # Value used to construct a URL consisting of BookRepo/BookCommitPath/<commit-hash>
  # Github uses 'commit', Bitbucket uses 'commits'
  # BookCommitPath = 'commit'

  # Enable "Edit this page" links for 'doc' page type.
  # Disabled by default. Uncomment to enable. Requires 'BookRepo' param.
  # Edit path must point to root directory of repo.
  #BookEditPath = 'edit/main/exampleSite'

  # Configure the date format used on the pages
  # - In git information
  # - In blog posts
  BookDateFormat = 'January 2, 2006'

  # (Optional, default true) Enables search function with flexsearch,
  # Index is built on fly, therefore it might slowdown your website.
  # Configuration for indexing can be adjusted in i18n folder per language.
  BookSearch = true

  # (Optional, default true) Enables comments template on pages
  # By default partals/docs/comments.html includes Disqus template
  # See https://gohugo.io/content-management/comments/#configure-disqus
  # Can be overwritten by same param in page frontmatter
  BookComments = true

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables portable links and link checks in markdown pages.
  # Portable links meant to work with text editors and let you write markdown without {{< relref >}} shortcode
  # Theme will print warning if page referenced in markdown does not exists.
  BookPortableLinks = true

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables service worker that caches visited pages and resources for offline use.
  BookServiceWorker = true

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables a drop-down menu for translations only if a translation is present.
  BookTranslatedOnly = false
